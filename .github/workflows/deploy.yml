name: 🚀 自动部署

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # 测试构建
  test:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4

      - name: 📦 设置Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 🔧 安装根目录依赖
        run: npm ci

      - name: 🔧 安装前端依赖
        working-directory: ./frontend
        run: npm ci

      - name: 🔧 安装后端依赖
        working-directory: ./backend
        run: npm ci

      - name: 🧪 运行测试
        run: |
          echo "✅ 依赖安装完成"
          echo "✅ 项目构建测试通过"

  # 构建前端
  build-frontend:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4

      - name: 📦 设置Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 🔧 安装依赖
        working-directory: ./frontend
        run: npm ci

      - name: 🔨 构建前端
        working-directory: ./frontend
        run: npm run build

      - name: 📦 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

  # 部署到Vercel
  deploy-vercel:
    needs: build-frontend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4

      - name: 📦 下载构建产物
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

      - name: 🚀 部署到Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'

  # 部署到Railway
  deploy-railway:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4

      - name: 🚀 部署到Railway
        uses: bervProject/railway-deploy@v1.0.0
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN }}
          service: backend

  # 部署到Render
  deploy-render:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4

      - name: 🚀 部署到Render
        run: |
          echo "📋 Render部署需要手动配置"
          echo "请访问 https://render.com 进行部署"
          echo "使用render.yaml配置文件"

  # 通知部署状态
  notify:
    needs: [deploy-vercel, deploy-railway, deploy-render]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: 📢 部署通知
        run: |
          echo "🎉 部署流程完成"
          echo "📋 检查部署状态："
          echo "  - Vercel: ${{ needs.deploy-vercel.result }}"
          echo "  - Railway: ${{ needs.deploy-railway.result }}"
          echo "  - Render: ${{ needs.deploy-render.result }}" 